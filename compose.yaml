services:
#web
    web_nginx:
        build:
            context: ./infra/web
            args:
                BUILD_ARGUMENT_ENV: dev
            dockerfile: ./nginx/Dockerfile
        restart: always
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./web:/var/www/html:ro,cached
            - ./infra/web/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - web_server
        networks:
            - symfony

    web_server:
        build:
            context: ./infra/web
            dockerfile: ./php/Dockerfile
        volumes:
            - ./web:/var/www/html:cached
            - ./infra/web/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./infra/web/php/config/php.ini:/usr/local/etc/php/php.ini
            - ./infra/web/php/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
        depends_on:
            - web_mysql
        networks:
            - symfony
        expose:
            - "9000"
            - "9003"

    web_mysql:
        image: mysql
        platform: linux/x86_64
        command: --innodb-use-native-aio=${INNODB_USE_NATIVE_AIO:-1} --sql_mode=${SQL_MODE:-"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"}
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_DATABASE: symfony
        ports:
            - "3306:3306"
        volumes:
            - mysql:/var/lib/mysql:delegated
        networks:
            - symfony

    web_myadmin:
        image: phpmyadmin/phpmyadmin:5
        environment:
            PMA_HOST: web_mysql
        ports:
            - "8080:80"
        depends_on:
            - web_mysql
        networks:
            - symfony
        volumes:
            - db_admin_data:/var/www/html

    elasticsearch:
        image: "docker.elastic.co/elasticsearch/elasticsearch:7.12.1"
        environment:
            - node.name=elasticsearch
            - cluster.name=docker-cluster
            - bootstrap.memory_lock=true
            - discovery.type=single-node
            - xpack.security.enabled=false
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        volumes:
            - esdata:/usr/share/elasticsearch/data
        ports:
            - "9200:9200"
        networks:
            - symfony

# API
    api_nginx:
        build:
            context: ./infra/api
            args:
                BUILD_ARGUMENT_ENV: dev
            dockerfile: ./nginx/Dockerfile
        restart: always
        ports:
            - "8000:80"
            - "4430:443"
        volumes:
            - ./api:/var/www/html:ro,cached
            - ./infra/api/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - api_server
        networks:
            - symfony

    api_server:
        build:
            context: ./infra/api
            dockerfile: ./php/Dockerfile
        volumes:
            - ./api:/var/www/html:cached
            - ./infra/api/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./infra/api/php/config/php.ini:/usr/local/etc/php/php.ini
            - ./infra/api/php/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#        depends_on:
#            - api_mysql
        networks:
            - symfony
        expose:
            - "9000"
            - "9003"

#    api_mysql:
#        image: mysql
#        platform: linux/x86_64
#        command: --innodb-use-native-aio=${INNODB_USE_NATIVE_AIO:-1} --sql_mode=${SQL_MODE:-"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"}
#        environment:
#            MYSQL_ROOT_PASSWORD: secret
#            MYSQL_DATABASE: symfony
#        ports:
#            - "33060:3306"
#        volumes:
#            - mysql:/var/lib/mysql:delegated
#        networks:
#            - symfony

#    api_myadmin:
#        image: phpmyadmin/phpmyadmin:5
#        environment:
#            PMA_HOST: mysql
#        ports:
#            - "8080:80"
#        depends_on:
#            - api_mysql
#        networks:
#            - symfony
#        volumes:
#            - db_admin_data:/var/www/html

# User
    user_web_nginx:
        build:
            context: ./infra/user
            args:
                BUILD_ARGUMENT_ENV: dev
            dockerfile: ./nginx/Dockerfile
        restart: always
        ports:
            - "7000:80"
            - "443:443"
        volumes:
            - ./user:/var/www/html:ro,cached
            - ./infra/user/nginx/conf.d:/etc/nginx/conf.d
        depends_on:
            - web_server
        networks:
            - symfony

    user_server:
        build:
            context: ./infra/user
            dockerfile: ./php/Dockerfile
        volumes:
            - ./user:/var/www/html:cached
            - ./infra/user/php/php-fpm.d/www.conf:/usr/local/etc/php-fpm.d/www.conf
            - ./infra/user/php/config/php.ini:/usr/local/etc/php/php.ini
            - ./infra/user/php/xdebug/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
        depends_on:
            - user_mysql
        networks:
            - symfony
        expose:
            - "9000"
            - "9003"

    user_mysql:
        image: mysql
        platform: linux/x86_64
        command: --innodb-use-native-aio=${INNODB_USE_NATIVE_AIO:-1} --sql_mode=${SQL_MODE:-"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"}
        environment:
            MYSQL_ROOT_PASSWORD: secret
            MYSQL_DATABASE: symfony
        ports:
            - "33060:3306"
        volumes:
            - mysql_user:/var/lib/mysql:delegated
        networks:
            - symfony

    user_myadmin:
        image: phpmyadmin/phpmyadmin:5
        environment:
            PMA_HOST: mysql
        ports:
            - "9002:80"
        depends_on:
            - user_mysql
        networks:
            - symfony
        volumes:
            - db_admin_data:/var/www/html


# Storage
    minio:
        image: minio/minio
        ports:
            - "9000:9000"
            - "9001:9001"
        environment:
            MINIO_ROOT_USER: your-access-key
            MINIO_ROOT_PASSWORD: your-secret-key
        volumes:
            - ./minio_data:/data
        command: server /data --console-address ":9001"
        networks:
            - symfony

volumes:
    db_admin_data:
    mysql:
    mysql_user:
    esdata:

networks:
    symfony:
        name: symfony
